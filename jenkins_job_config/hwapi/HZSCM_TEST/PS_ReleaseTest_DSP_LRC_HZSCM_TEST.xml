<matrix-project plugin="matrix-project@1.11">
  <actions />
  <description>This job is for DSPHWAPI release testing. This job done tests for Extended test sets. &lt;br&gt;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>7</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28" />
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.15.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.TextParameterDefinition>
          <name>ECL_REVISION</name>
          <description />
          <defaultValue />
        </hudson.model.TextParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList" />
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit />
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.CustomSCM" plugin="customSCM@0.7.6">
    <checkoutCommand>/build/home/ca_pscilrc/scripts/customscm-changelog.sh</checkoutCommand>
    <calcRevisionCommand />
    <compareRevisionCommand />
    <repoBrowserURL />
  </scm>
  <assignedNode>build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers />
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>slave</name>
      <values>
        <string>PSCI_MAIN_LSP_K2_DSPCCS_LTE</string>
        <string>PSCI_MAIN_LSP_K2_DSPHWAPI_LTE</string>
        <string>PSCI_MAIN_LSP_K2_DSPHWAPI_WCDMA</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
set -x

export branch=HZSCM_TEST
export isThisLrc=YES

export scriptDir=C_Platform/DSPHWAPI
export mitDir=C_Platform/DSPHWAPI

export needsDSPHWAPITestCodes=YES
export needsDSPCCSTestCodes=YES
export use_runTests=YES

export saveEnergySaveTheWorld=YES

#Get a right ECL 
if [ -d ECL ];then
  rm -fr ECL
fi

#disable command prints
set +x
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/ECL/$branch/ECL_HWAPI -r $ECL_REVISION ECL
#cp -rf /home/tester/ECL ECL

echo ecl revision $ECL_REVISION

svn info --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/ECL/$branch/ECL_HWAPI -r $ECL_REVISION | egrep -v 'Repo|Revi|Text Last|Path' &gt; ECL_revision_info.txt
echo 

if [ "$MANUAL_TRIGGER_JOB" == "true" ]; then
	#Disable MCU SW dl, if triggered by a certain upstream job
    echo
    echo "************************"
    echo Disabling MCU SW upgrade
	export mcuSwDlFlag=YES
    echo "************************"
    echo
    
    #If parameter is not empty, then modify DSPHWAPI part in ECL
    if [ -n "$DSPHWAPI_REVISION" ]; then 
    	echo "****************************************************"
        echo Overwriting DSPHWAPI revision in ECL file with $DSPHWAPI_REVISION
        chmod 777 ECL/ECL
        sed -i "s/\(ECL_DSPHWAPI.*@\)[0-9]*/\1$DSPHWAPI_REVISION/g" ECL/ECL
        
        echo "****************************************************"
        echo
    fi
    
else
	#Default value
	export mcuSwDlFlag=YES
fi


svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/nibbles/branches/filelogger/trunk/tryme/nibbles_static

svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/branches/ps_rel_ci/jenkins/scripts_lrc/DSPTargetTest.sh

svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/LRC_SC_UPHWAPI/HZSCM_TEST/trunk/C_Platform/DSPHWAPI/TestScripts/Utils

#These "connectedTargetRelayX" definitions comes from Jenkins Node config.
echo "Relay parameters which are tied to Jenkins node:"
echo "connectedTargetRelayNbr is $connectedTargetRelayNbr"
if [ "$connectedTargetRelayNbr" != "" ]; then
    export relayNbr=$connectedTargetRelayNbr
else
    export relayNbr=0
fi

if [ "$connectedTargetRelayType" != "" ]; then
    export powerSwitchType=$connectedTargetRelayType
else
    export powerSwitchType=MOXA
fi

if [ "$connectedTargetRelayIP" != "" ]; then
    export powerSwitchIp=$connectedTargetRelayIP
else
    export powerSwitchIp=192.168.255.254
fi
echo "Relay nbr:  " $connectedTargetRelayNbr
echo "Relay type: " $connectedTargetRelayType
echo "Relay IP:   " $connectedTargetRelayIP

if [ "$slave" == "PSCI_MAIN_LSP_K2_DSPCCS_LTE" ]; then
    export sendEmails=YES
    export multipleFspSwDlFlag=NO
    export swDlFepMode=YES
    export binDirRtQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export binDirBwQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export zipDirRt=C_Platform/DSPHWAPI/Bin/Kepler
    export zipDirBw=Out/Kepler
    echo "**** Powering on module..."
    python Utils/RemotePowerSwitch.py --set=$relayNbr --state=1 --type=$powerSwitchType --ip=$powerSwitchIp
    sleep 240
    echo "*******************************"
    #./DSPTargetTest.sh KEP LTE PSCI_MAIN_LSP_K2_DSPCCS_LTE --target=0x1200 --testSetXml=./LRC/sctParams/LrcLspK2DspCcsSctSet.xml
    ./DSPTargetTest.sh KEP LTE PSCI_MAIN_LSP_K2_DSPCCS_LTE --target=0x1200 --input=../../CCS_DSP/TestCodes/ --testSetXml=./LRC/sctParams/LrcLspK2DspCcsReleaseTests.xml

elif [ "$slave" == "PSCI_MAIN_LSP_K2_DSPHWAPI_LTE" ]; then
    export sendEmails=YES
    export multipleFspSwDlFlag=NO
    export swDlFepMode=YES
    export binDirRtQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export binDirBwQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export zipDirRt=C_Platform/DSPHWAPI/Bin/Kepler
    export zipDirBw=Out/Kepler
    echo "**** Powering on module..."
    python Utils/RemotePowerSwitch.py --set=$relayNbr --state=1 --type=$powerSwitchType --ip=$powerSwitchIp
    sleep 240
    echo "*******************************"
    #./DSPTargetTest.sh KEP LTE PSCI_MAIN_LSP_K2_DSPHWAPI_LTE --target=0x1200 --testSetXml=./LRC/sctParams/LrcLspK2DspHwApiSctSet.xml
    ./DSPTargetTest.sh KEP LTE PSCI_MAIN_LSP_K2_DSPHWAPI_LTE --target=0x1200 --input=../../DSPHWAPI/TestCodes/ --testSetXml=./LRC/sctParams/LrcLspK2DspHwApiReleaseTests.xml
    
elif [ "$slave" == "PSCI_MAIN_LSP_K2_DSPHWAPI_WCDMA" ]; then
    export sendEmails=YES
    export multipleFspSwDlFlag=NO
    export swDlFepMode=YES
    export binDirRtQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export binDirBwQt=C_Platform/DSPHWAPI/Bin/Nyquist
    export zipDirRt=C_Platform/DSPHWAPI/Bin/Kepler
    export zipDirBw=Out/Kepler
    echo "**** Powering on module..."
    python Utils/RemotePowerSwitch.py --set=$relayNbr --state=1 --type=$powerSwitchType --ip=$powerSwitchIp
    sleep 240
    echo "*******************************"
    ./DSPTargetTest.sh KEP WCDMA PSCI_MAIN_LSP_K2_DSPHWAPI_WCDMA --target=0x1200 --input=../../DSPHWAPI/TestCodes/ --testSetXml=./LRC/sctParams/LrcLspK2DspHwApiReleaseTests.xml


else
    echo "testing under construction, slave: $slave"
fi

if [ "$sendEmails" == "YES" ]; then
    svn export --non-interactive --trust-server-cert --username=ca_pscilrc --password=fCfYAXbr --force https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/branches/ps_rel_ci/jenkins/scripts_lrc/tcrs.py

    python ./tcrs.py -s -x ./testdir/C_Platform/DSPHWAPI/TestScripts/"$slave"_results.xml -a ./testdir/C_Platform/DSPHWAPI/TestScripts/DSPHWAPI_CI_Contact_List.xml -i ${BUILD_ID} -t ${BUILD_TAG} -u ${BUILD_URL}
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
if [ -d testdir/C_Platform/DSPHWAPI/TestScripts/ ]; then
    cd ${WORKSPACE}/testdir/C_Platform/DSPHWAPI/TestScripts/
    zip logs.zip *.log 
fi</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText />
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>pkill -9 -f python</script>
        </hudson.plugins.postbuildtask.TaskProperties>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText />
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script />
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>testdir/C_Platform/DSPHWAPI/TestScripts/*.csv,  testdir/C_Platform/DSPHWAPI/TestScripts/*.zip, ECL_revision_info.txt, unit_logs.zip,testdir/C_Platform/DSPHWAPI/TestScripts/*results.xml,</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <hudson.tasks.junit.JUnitResultArchiver plugin="junit@1.21">
      <testResults>testdir/C_Platform/DSPHWAPI/TestScripts/*results.xml</testResults>
      <keepLongStdio>false</keepLongStdio>
      <testDataPublishers>
        <de.esailors.jenkins.teststability.StabilityTestDataPublisher plugin="test-stability@1.0" />
      </testDataPublishers>
      <healthScaleFactor>1.0</healthScaleFactor>
      <allowEmptyResults>false</allowEmptyResults>
    </hudson.tasks.junit.JUnitResultArchiver>
    <hudson.tasks.Fingerprinter>
      <targets>ECL_revision_info.txt</targets>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher plugin="description-setter@1.10">
      <regexp />
      <regexpForFailed />
      <description>ECL:#$ECL_REVISION</description>
      <descriptionForFailed>ECL:#$ECL_REVISION</descriptionForFailed>
      <setForMatrix>true</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.34">
        <script>import hudson.matrix.MatrixBuild; 
import hudson.matrix.MatrixRun; 
if (manager.build instanceof MatrixBuild) { 

   // parent build code
} 

else if (manager.build instanceof MatrixRun) {

   if(manager.build.testResultAction) {
      // def duration = manager.build.getDurationString()
      def tr = manager.build.testResultAction.result
      def failed = tr.failedTests.size()
      if (failed != 0) {
          manager.addShortText("$failed test(s) failed.", "black", "white", "0px", "white")
       }
      else if (failed == 0) {
          
      }
   } 
}
</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>true</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.30">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NUMBER=${BUILD_NUMBER}
UP_PROJECT=PS_ReleaseTest_DSP_LRC_HZSCM_TEST</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>HWAPI_COOP_SCTCase_Upload</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.29">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter />
      <externalDelete />
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.16-INTEL-1">
      <strategy class="hudson.plugins.build_timeout.impl.ElasticTimeOutStrategy">
        <timeoutPercentage>250</timeoutPercentage>
        <numberOfBuilds>3</numberOfBuilds>
        <failSafeTimeoutDuration>false</failSafeTimeoutDuration>
        <timeoutMinutesElasticDefault>150</timeoutMinutesElasticDefault>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.FailOperation />
        <hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
          <description>timeout!</description>
        </hudson.plugins.build__timeout.operations.WriteDescriptionOperation>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.3" />
    <matrixtieparent.BuildWrapperMtp plugin="matrixtieparent@1.2">
      <labelName>build</labelName>
    </matrixtieparent.BuildWrapperMtp>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>