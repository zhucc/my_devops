<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.11">
  <actions/>
  <description>&lt;b&gt;Links:&lt;/b&gt;&lt;br&gt;&#xd;
&lt;a href=&quot;http://psci.emea.nsn-net.net:8080/job/PS_StartupTest_LRC_MAINBRANCH_LRC/&quot;&gt;PS_StartupTest_LRC_MAINBRANCH_LRC&lt;/a&gt;&#xd;
&lt;br&gt;&lt;br&gt;&#xd;
28.12.2015: HDBDE_FULL_SCT_03 added again.&lt;br&gt;&#xd;
23.12.2015: HDBDE_FULL_SCT_03 removed because logger PC (192.168.255.87) seems to be broken.&lt;br&gt;&#xd;
22.12.2015: HDBDE_FULL_SCT_02, HDBDE_FULL_SCT_03 added. Purpose is to distribute test cases evenly and shorten testing time.&#xd;
&#xd;
</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.security.AuthorizationMatrixProperty>
      <permission>hudson.scm.SCM.Tag:visjokel</permission>
      <permission>hudson.scm.SCM.Tag:grzhao</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:visjokel</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Delete:grzhao</permission>
      <permission>hudson.model.Item.Read:visjokel</permission>
      <permission>hudson.model.Item.Read:grzhao</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:visjokel</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.ManageDomains:grzhao</permission>
      <permission>hudson.model.Item.Move:grzhao</permission>
      <permission>hudson.model.Item.ExtendedRead:visjokel</permission>
      <permission>hudson.model.Item.ExtendedRead:grzhao</permission>
      <permission>hudson.plugins.promoted_builds.Promotion.Promote:visjokel</permission>
      <permission>hudson.plugins.promoted_builds.Promotion.Promote:grzhao</permission>
      <permission>hudson.model.Item.Workspace:visjokel</permission>
      <permission>hudson.model.Item.Workspace:grzhao</permission>
      <permission>hudson.model.Item.Configure:visjokel</permission>
      <permission>hudson.model.Item.Configure:grzhao</permission>
      <permission>hudson.model.Item.Configure:tevuoti</permission>
      <permission>hudson.model.Run.Delete:visjokel</permission>
      <permission>hudson.model.Run.Delete:grzhao</permission>
      <permission>hudson.model.Item.Discover:visjokel</permission>
      <permission>hudson.model.Item.Discover:grzhao</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:visjokel</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.View:grzhao</permission>
      <permission>hudson.model.Item.Build:erkkila</permission>
      <permission>hudson.model.Item.Build:visjokel</permission>
      <permission>hudson.model.Item.Build:grzhao</permission>
      <permission>hudson.model.Item.Cancel:visjokel</permission>
      <permission>hudson.model.Item.Cancel:grzhao</permission>
      <permission>hudson.model.Item.Cancel:tevuoti</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:visjokel</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Create:grzhao</permission>
      <permission>hudson.model.Item.Delete:visjokel</permission>
      <permission>hudson.model.Item.Delete:grzhao</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:visjokel</permission>
      <permission>com.cloudbees.plugins.credentials.CredentialsProvider.Update:grzhao</permission>
      <permission>hudson.model.Run.Update:visjokel</permission>
      <permission>hudson.model.Run.Update:grzhao</permission>
    </hudson.security.AuthorizationMatrixProperty>
    <jenkins.model.BuildDiscarderProperty>
      <strategy class="hudson.tasks.LogRotator">
        <daysToKeep>30</daysToKeep>
        <numToKeep>20</numToKeep>
        <artifactDaysToKeep>7</artifactDaysToKeep>
        <artifactNumToKeep>-1</artifactNumToKeep>
      </strategy>
    </jenkins.model.BuildDiscarderProperty>
    <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28"/>
    <com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty plugin="build-failure-analyzer@1.15.0">
      <doNotScan>false</doNotScan>
    </com.sonyericsson.jenkins.plugins.bfa.model.ScannerJobProperty>
    <com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty plugin="naginator@1.17.1">
      <optOut>false</optOut>
    </com.chikli.hudson.plugin.naginator.NaginatorOptOutProperty>
    <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.25">
      <autoRebuild>false</autoRebuild>
      <rebuildDisabled>false</rebuildDisabled>
    </com.sonyericsson.rebuild.RebuildSettings>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>ECL_REVISION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TEST_SUITE_REVISION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>MIT_REVISION</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>ROBOT_FRAMEWORK_REVISION</name>
          <description></description>
          <defaultValue>HEAD</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>branch</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>MAINBRANCH_LRC</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>USE_PROBLEM_DB</name>
          <description></description>
          <defaultValue>true</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>CODE_COVERAGE</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>TESTBINARY</name>
          <description>Test binary filesystem location http://psci.emea.nsn-net.net:8080/job/MCU_Build_Rel3_CTC_MAINBRANCH_LRC/ws/MCU_trunk/filesystem.tgz</description>
          <defaultValue>http://10.140.19.16:8080//job/MCU_Build_Rel3_CTC_MAINBRANCH_LRC/ws/MCU_trunk/filesystem.tgz</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.BooleanParameterDefinition>
          <name>TEST_BIN</name>
          <description></description>
          <defaultValue>false</defaultValue>
        </hudson.model.BooleanParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>PARENT_PROJECT</name>
          <description></description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
    <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
      <maxConcurrentPerNode>0</maxConcurrentPerNode>
      <maxConcurrentTotal>0</maxConcurrentTotal>
      <categories class="java.util.concurrent.CopyOnWriteArrayList"/>
      <throttleEnabled>false</throttleEnabled>
      <throttleOption>project</throttleOption>
      <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
      <matrixOptions>
        <throttleMatrixBuilds>true</throttleMatrixBuilds>
        <throttleMatrixConfigurations>false</throttleMatrixConfigurations>
      </matrixOptions>
      <paramsToUseForLimit></paramsToUseForLimit>
      <configVersion>1</configVersion>
    </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
  </properties>
  <scm class="hudson.scm.CustomSCM" plugin="customSCM@0.7.6">
    <checkoutCommand>/build/home/ca_pscilrc/scripts/customscm-changelog.sh</checkoutCommand>
    <calcRevisionCommand></calcRevisionCommand>
    <compareRevisionCommand></compareRevisionCommand>
    <repoBrowserURL></repoBrowserURL>
  </scm>
  <assignedNode>build</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>true</concurrentBuild>
  <axes>
    <hudson.matrix.LabelAxis>
      <name>label</name>
      <values>
        <string>HDBDE_FULL_SCT_01</string>
        <string>HDBDE_FULL_SCT_02</string>
        <string>HDBDE_FULL_SCT_03</string>
        <string>HDBDE_FULL_SCT_BBB</string>
        <string>HDBDE_FULL_SCT_CLK_SYNC_01</string>
      </values>
    </hudson.matrix.LabelAxis>
  </axes>
  <builders>
    <hudson.tasks.Shell>
      <command>test_env=$label
date
mkdir ECL
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/ECL/MAINBRANCH_LRC/ECL_HWAPI/ECL@$ECL_REVISION ECL/ECL &gt;&gt; svn_log.txt
svn info --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/ECL/MAINBRANCH_LRC/ECL_HWAPI -r $ECL_REVISION | egrep -v &apos;Repo|Revi|Text Last|Path&apos; &gt; ECL_revision_info.txt</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/CiTools/upload_lrc.sh &gt;&gt; svn_log.txt
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/CiTools/CI_SCT_SUITES/DefaultInit.txt &gt;&gt; svn_log.txt

test_env=$label
echo &quot;current label is $label&quot;
# use the JuMa&apos;s pimped ReserveIt instead of the SVN version
#svn export https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/ReserveItPy/trunk/ ReserveIt
#ln -s /home/psci/ReserveIt ReserveIt
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/ReserveItPy/trunk/ ReserveIt &gt;&gt; svn_log.txt

svn co --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --depth empty https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/CiTools/CI_SCT_SUITES/${branch} &gt;&gt; svn_log.txt

svn up --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert ${branch}/${test_env}
svn up --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert ${branch}/Problem.db
svn co --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_T_PS_TOOLS/CiTools/CI_SCT_SUITES/test_env &gt;&gt; svn_log.txt

mcuhwapi=($(sed -n &apos;s/ECL_MCUHWAPI=\(.*\)\@\([0-9]*\)/\1 \2/p&apos; ECL/ECL))

for revision in TEST_SUITE_REVISION MIT_REVISION ROBOT_REVISION
do
    echo &quot;$revision: ${!revision}&quot;
    if [ -z ${!revision} ];then
	eval &quot;${revision}=${mcuhwapi[1]}&quot;
    fi
done

svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com${mcuhwapi[0]}/HWR/Sct@${TEST_SUITE_REVISION} Sct &gt;&gt; svn_log.txt
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com${mcuhwapi[0]}/HWR/Mit@${MIT_REVISION} Mit &gt;&gt; svn_log.txt
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com${mcuhwapi[0]}/Tools/Linux/bin/robotframework-2.7.2/@${ROBOT_FRAMEWORK_REVISION} Robot &gt;&gt; svn_log.txt

#ln -sf ${WORKSPACE}/test_env/$test_env.py ${branch}/$test_env/common/TARGET_ENV.py
###add by Grace###

if [[ $test_env == HDBDE_FULL_SCT_02 || $test_env == HDBDE_FULL_SCT_03 ]] ;then
     envNum=${test_env##*_}
 
     ln -sf ${WORKSPACE}/test_env/HDBDE_FULL_SCT_HZ_$envNum.py ${branch}/$test_env/common/TARGET_ENV.py
     ln -sf ${WORKSPACE}/test_env/HDBDE_FULL_SCT_HZ_$envNum.py Sct/common/TARGET_ENV.py
else
     ln -sf ${WORKSPACE}/test_env/$test_env.py ${branch}/$test_env/common/TARGET_ENV.py
     ln -sf ${WORKSPACE}/test_env/$test_env.py Sct/common/TARGET_ENV.py
fi
###end     


ln -s ${WORKSPACE}/${branch}/$test_env/15__State_Transitions/Variables_TARGET_ENV.py Sct/suites/15__State_Transitions/Variables_TARGET_ENV.py

[[ ! -e /build/home/ca_pscilrc/PS_CI_LIBS/MCUHWAPI/MCU_TEST_${mcuhwapi[1]}.zip ]] &amp;&amp; echo &quot;MCU_TEST_${mcuhwapi[1]}.zip not found&quot; &amp;&amp; exit

#wget http://psci.emea.nsn-net.net:8080/job/MCU_Build_Rel3_MAINBRANCH_LRC/ws//artifacts.zip
unzip /build/home/ca_pscilrc/PS_CI_LIBS/MCUHWAPI/MCU_TEST_${mcuhwapi[1]}.zip *.py

mkdir -p $WORKSPACE/Tbts
unzip -j /build/home/ca_pscilrc/PS_CI_LIBS/MCUHWAPI/MCU_TEST_${mcuhwapi[1]}.zip C_Platform/MCUHWAPI/Exe/LINUX_OCTEON2/LCP_SHP/TbtsExe -d $WORKSPACE/Tbts
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>echo &quot;properties = { &apos;server_ip_address&apos;:&apos;10.140.19.16&apos;,&quot; &gt; ReserveIt/Properties.py
echo &quot;               &apos;server_port&apos;:&apos;59108&apos;,&quot; &gt;&gt; ReserveIt/Properties.py
echo &quot;               &apos;own_name&apos;:&apos;CI_${branch}&apos;,&quot; &gt;&gt; ReserveIt/Properties.py
echo &quot;               &apos;subnet&apos;:&apos;192.168.255&apos;}&quot; &gt;&gt; ReserveIt/Properties.py
</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>test_env=$label
echo &quot;Starting Serial Port loggers&quot;
#console 1 -p 3109 -M 192.168.255.87 &gt; LCP_SHP_console1.log &amp;
#console 2 -p 3109 -M 192.168.255.87 &gt; LCP_AHP_console2.log &amp;
#console 5 -p 3109 -M 192.168.255.87 &gt; LSP_K2_console5.log &amp;
#console 6 -p 3109 -M 192.168.255.87 &gt; LSP_AXM_console6.log &amp;
#console 7 -p 3109 -M 192.168.255.87 &gt; LSP_K2_console7.log &amp;
#console 8 -p 3109 -M 192.168.255.87 &gt; LSP_K2_console8.log &amp;

if [[ ${test_env} == &quot;HDBDE_FULL_SCT_02&quot; || ${test_env} == &quot;HDBDE_FULL_SCT_01&quot; ]]; then
     echo &quot;there will be no console_log in the artifact.&quot;
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>test_env=$label
if [ ${CODE_COVERAGE} == true ]; then
  wget http://10.140.19.16:8080/job/${PARENT_PROJECT}/ws/MCU_trunk/exe/LINUX_OCTEON2/LCP_SHP/LCP____SF_E0000.FEP
  wget http://10.140.19.16:8080/job/${PARENT_PROJECT}/ws/MCU_trunk/exe/LINUX_OCTEON2/LCP_AHP/LCP____AO_E0000.FEP
  wget http://10.140.19.16:8080/job/${PARENT_PROJECT}/ws/NSN-LSP-OS
  wget http://10.140.19.16:8080/job/${PARENT_PROJECT}/ws/NSN-LTE-DSP
  extra=&quot;-e cp:LCP____SF_E0000.FEP:lrc/fep/LCP____SF_E0000.FEP -e cp:LCP____AO_E0000.FEP:lrc/fep/LCP____AO_E0000.FEP -e cp:NSN-LSP-OS:lsp-fep/4/NSN-LSP-OS -e cp:NSN-LTE-DSP:lsp-fep/4/NSN-LTE-DSP -a python -F y&quot;
fi

svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert --force https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/branches/ps_rel_ci/jenkins/scripts_lrc/update_sw_mcu_lrc.sh &gt;&gt; svn_log.txt
chmod +x update_sw_mcu_lrc.sh

if [ ${TEST_BIN} == true ]; then
  wget ${TESTBINARY} -O testbin.tgz
  tar -xzf testbin.tgz
  ./upload_lrc.sh -l
  ./update_sw_mcu_lrc.sh ${WORKSPACE} ${branch} ${test_env} TESTBIN -T ECL ${extra} ; sw_update_result=$?
  echo &quot;SW Update Result: $sw_update_result&quot;

else
  echo &quot;upload sw TBD&quot;
  ./update_sw_mcu_lrc.sh ${WORKSPACE} ${branch} ${test_env} ${ECL_REVISION} -T ECL ${extra} ; sw_update_result=$?
  echo &quot;SW Update Result: $sw_update_result&quot;
fi

### check if update_sw_mcu_lrc.sh script failed
if [ &quot;$sw_update_result&quot; -gt 0 ]; then
  echo &quot;fail&quot; &gt; sw_update_result.txt
fi</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>test_env=$label
buildfolder=$(ls MCU_trunk/ | head -n 1 | sed -n &apos;s/build_//p&apos;)
export PYTHONPATH=Robot/lib/python2.6/site-packages:Sct:Mit/scripts:ReserveIt:${branch}/$test_env:Sct:MCU_trunk/build_$buildfolder/python/iface:MCU_trunk/build_rel3/common_tests/python

python --version

if [ ${CODE_COVERAGE} == true ]; then
   params=&quot;$params -v COVERAGE:CTC&quot;
fi

date
sleep 10

# power down target in suite tear down
params=&quot;$params -v POWER_DOWN_TARGET:NO&quot;

#Robot/bin/pybot -n exclude-test -e ignore-test --listener keywords.UdpListener.UdpListener:start=&quot;SUITE&quot;,level=FAIL --listener keywords.TestCaseListener.TestCaseListener --runemptysuite --nostatusrc --output output.xml --log NONE --report NONE $params -v RESET_DELAY:2 ${branch}/$test_env

#commented for testing report writing without ReportWriter.py
#Robot/bin/pybot --removekeywords all -n exclude-test -e ignore-test --listener keywords.UdpListener.UdpListener:start=&quot;SUITE&quot;,level=FAIL,server=localhost,port=51000 --runemptysuite --nostatusrc --output output.xml --log NONE --report NONE $params -v RESET_DELAY=5 ${branch}/$test_env

# lrc
#Robot/bin/pybot --removekeywords all -n exclude-test -e ignore-test --listener keywords.TestCaseListener.TestCaseListener --runemptysuite --nostatusrc --output output.xml $params -v RESET_DELAY=5 ${branch}/$test_env

# from rel3 job
Robot/bin/pybot --removekeywords all -n exclude-test -e ignore-test --listener keywords.UdpListener.UdpListener:start=&quot;TargetConnection.Power Up Target&quot;,level=FAIL --listener keywords.TestCaseListener.TestCaseListener --runemptysuite --nostatusrc --output output.xml --log NONE --report NONE $params -v RESET_DELAY:5 ${branch}/$test_env</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
test_env=$label
#for testing
export USE_PROBLEM_DB=true
date
if [ ${USE_PROBLEM_DB} == true ]; then
#  Robot/bin/ReportWriter ${branch}/Problem.db Problems output.xml ${branch} ${test_env} $ECL_REVISION
#  sed -i &apos;/^.*&lt;msg.*&gt;.*&lt;\/msg&gt;/d&apos; output.xml
#  sed -i &apos;/^.*&lt;msg.*&gt;.*/,/^.*&lt;\/msg&gt;/d&apos; output.xml
  Robot/bin/ReportWriter  -d ${branch}/Problem.db -b ${branch} -e $test_env -x -r $ECL_REVISION output.xml ; test_result=$?
     
else
  export PYTHONPATH=Robot/lib/python2.6/site-packages:Sct:Mit/scripts:ReserveIt:${branch}/$test_env
  Robot/bin/rebot --processemptysuite -n non-critical --exclude exclude-test --output ${branch}_${test_env}_output.xml --log ${branch}_${test_env}_log.html --report ${branch}_${test_env}_report.html --xunitfile ${branch}_${test_env}_xunitlog.xml --logtitle HWAPI_System_Component_Tests_Log --reporttitle HWAPI_System_Component_Tests_Report_for_${branch}_${test_env}_trunk@$ECL_REVISION output.xml ; test_result=$?
fi

echo &quot;ROBOT STATUS:$test_result&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
date
rm -f aaerror.log
touch aaerror.log
for udp in UDP_*.log
do 
  if [ -e $udp ]; then
    echo $udp &gt;&gt; aaerror.log
    sed -n &apos;/.*ERR\/CCS\/AaError.*/p&apos; $udp &gt;&gt; aaerror.log
  fi
done
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.robot.RobotPublisher plugin="robot@1.6.4">
      <outputPath>.</outputPath>
      <reportFileName>*_report.html	</reportFileName>
      <logFileName>*_log.html</logFileName>
      <outputFileName>*_output.xml</outputFileName>
      <disableArchiveOutput>false</disableArchiveOutput>
      <passThreshold>100.0</passThreshold>
      <unstableThreshold>0.0</unstableThreshold>
      <otherFiles>
        <string></string>
      </otherFiles>
      <enableCache>true</enableCache>
      <onlyCritical>true</onlyCritical>
    </hudson.plugins.robot.RobotPublisher>
    <hudson.tasks.test.AggregatedTestResultPublisher plugin="junit@1.21">
      <includeFailedBuilds>false</includeFailedBuilds>
    </hudson.tasks.test.AggregatedTestResultPublisher>
    <hudson.plugins.postbuildtask.PostbuildTask plugin="postbuild-task@1.8">
      <tasks>
        <hudson.plugins.postbuildtask.TaskProperties>
          <logTexts>
            <hudson.plugins.postbuildtask.LogProperties>
              <logText></logText>
              <operator>AND</operator>
            </hudson.plugins.postbuildtask.LogProperties>
          </logTexts>
          <EscalateStatus>false</EscalateStatus>
          <RunIfJobSuccessful>false</RunIfJobSuccessful>
          <script>#!/bin/bash&#xd;
set -x&#xd;
test_env=$label&#xd;
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/branches/ps_rel_ci/jenkins/scripts_lrc/fetch_lrc_logs.sh&#xd;
if [[ ${test_env} == &quot;HDBDE_FULL_SCT_03&quot; ]]; then&#xd;
    ./fetch_lrc_logs.sh 192.168.255.1 192.168.255.2&#xd;
else&#xd;
    ./fetch_lrc_logs.sh 192.168.255.1 192.168.255.2&#xd;
fi&#xd;
tar cz unit_logs/ -f unit_logs.tgz&#xd;
rm -rf unit_logs/&#xd;
&#xd;
svn export --username=ca_pscilrc --password=fCfYAXbr --non-interactive --trust-server-cert https://svne1.access.nsn.com/isource/svnroot/BTS_SCM_PS/branches/ps_rel_ci/jenkins/scripts_lrc/run_testcleanup_lrc.sh&#xd;
chmod 777 run_testcleanup_lrc.sh&#xd;
./run_testcleanup_lrc.sh -p LRC -t ${TARGET_NAME} -s Off -r CI_${branch}&#xd;
rm *output.xml</script>
        </hudson.plugins.postbuildtask.TaskProperties>
      </tasks>
    </hudson.plugins.postbuildtask.PostbuildTask>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>MAINBRANCH_LRC_*,UDP*.log,plots/*, ECL_revision_info.txt,ctc_data*/*,ECL/ECL,ECL_HWAPI_FEP_*.zip,*console*.log,MCU_TEST_*.zip,aaerror.log,console_logs.tgz,unit_logs.tgz</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
    <org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder plugin="groovy-postbuild@2.3.1">
      <script plugin="script-security@1.34">
        <script>def env = manager.build.getBuildVariables()

if (&quot;true&quot;.equals(env.get(&quot;CODE_COVERAGE&quot;))) {
  manager.addShortText(&quot;CTC &quot;,&apos;white&apos;,&apos;black&apos;,&apos;0px&apos;,&apos;white&apos;)
}
manager.addShortText(&quot;ECL:&quot;+env.get(&quot;ECL_REVISION&quot;),&apos;black&apos;,&apos;white&apos;,&apos;0px&apos;,&apos;white&apos;)

def fail_nodes = manager.getLogMatcher(&quot;.*Failing Nodes: (.*)&quot;)
if (fail_nodes?.matches()) {
  manager.addShortText(&quot;Fails: &quot;+fail_nodes.group(1),&apos;black&apos;,&apos;white&apos;,&apos;0px&apos;,&apos;white&apos;)
}

def reserver = manager.getLogMatcher(&quot;^FatalError: (.*) is reserved by (.*)&quot;)
if (reserver?.matches()) {
  manager.addWarningBadge(&quot;Target Reservation failed&quot;)
  summary = manager.createSummary(&quot;warning.gif&quot;)
  summary.appendText(&quot;&lt;h1&gt;Target Reservation Failed!&lt;/h1&gt;&quot;, false, false, false, &quot;red&quot;)
  summary.appendText(reserver.group(1)+&quot; is reserved by &quot;+reserver.group(2), true,true,false,&quot;black&quot;)
  manager.build.setResult(hudson.model.Result.NOT_BUILT)
}
else {
  def failure = manager.getLogMatcher(&quot;^ROBOT STATUS:([0-9]+).*&quot;)
  if (failure?.matches() ) {
    failures = Integer.parseInt(failure.group(1))
    if ( failures &gt; 0 ) {
      manager.listener.logger.println(failure.group(1)+&quot; Critical Test(s) failed.&quot;)
      manager.addWarningBadge(&quot;&quot;)
      manager.addShortText(failure.group(1)+&quot; Critical test(s) failed&quot;, &quot;black&quot;, &quot;white&quot;, &quot;0px&quot;, &quot;white&quot;)
      manager.buildUnstable()
    }
    else {
    manager.addBadge(&quot;success.gif&quot;,&quot;Passed&quot;)
    manager.addShortText(&quot;All Critical Tests passed&quot;, &quot;black&quot;, &quot;white&quot;, &quot;0px&quot;, &quot;white&quot;)
    }
  }
  else {
  manager.addErrorBadge(&quot;no results&quot;)
  manager.addShortText(&quot;Failed to get result&quot;,&apos;black&apos;,&apos;red&apos;,&apos;0px&apos;,&apos;white&apos;)
  }
}


</script>
        <sandbox>false</sandbox>
      </script>
      <behavior>0</behavior>
      <runForMatrixParent>false</runForMatrixParent>
    </org.jvnet.hudson.plugins.groovypostbuild.GroovyPostbuildRecorder>
    <hudson.tasks.Fingerprinter>
      <targets>ECL_revision_info.txt</targets>
    </hudson.tasks.Fingerprinter>
    <hudson.plugins.descriptionsetter.DescriptionSetterPublisher plugin="description-setter@1.10">
      <regexp></regexp>
      <regexpForFailed></regexpForFailed>
      <description>$ECL_REVISION</description>
      <descriptionForFailed>$ECL_REVISION</descriptionForFailed>
      <setForMatrix>true</setForMatrix>
    </hudson.plugins.descriptionsetter.DescriptionSetterPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.30">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs>
            <hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
              <properties>BUILD_NUMBER=${BUILD_NUMBER}
UP_PROJECT=PS_ReleaseTest_MCU_LRC_MAINBRANCH_LRC</properties>
            </hudson.plugins.parameterizedtrigger.PredefinedBuildParameters>
          </configs>
          <projects>HWAPI_COOP_SCTCase_Upload</projects>
          <condition>ALWAYS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
    <hudson.plugins.emailext.ExtendedEmailPublisher plugin="email-ext@2.44">
      <recipientList></recipientList>
      <configuredTriggers>
        <hudson.plugins.emailext.plugins.trigger.FirstFailureTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
          <failureCount>1</failureCount>
        </hudson.plugins.emailext.plugins.trigger.FirstFailureTrigger>
        <hudson.plugins.emailext.plugins.trigger.FirstUnstableTrigger>
          <email>
            <subject>$PROJECT_DEFAULT_SUBJECT</subject>
            <body>$PROJECT_DEFAULT_CONTENT</body>
            <recipientProviders>
              <hudson.plugins.emailext.plugins.recipients.DevelopersRecipientProvider/>
              <hudson.plugins.emailext.plugins.recipients.ListRecipientProvider/>
            </recipientProviders>
            <attachmentsPattern></attachmentsPattern>
            <attachBuildLog>false</attachBuildLog>
            <compressBuildLog>false</compressBuildLog>
            <replyTo>$PROJECT_DEFAULT_REPLYTO</replyTo>
            <contentType>project</contentType>
          </email>
        </hudson.plugins.emailext.plugins.trigger.FirstUnstableTrigger>
      </configuredTriggers>
      <contentType>text/html</contentType>
      <defaultSubject>$DEFAULT_SUBJECT</defaultSubject>
      <defaultContent>${JELLY_SCRIPT}</defaultContent>
      <attachmentsPattern></attachmentsPattern>
      <presendScript></presendScript>
      <postsendScript></postsendScript>
      <attachBuildLog>false</attachBuildLog>
      <compressBuildLog>false</compressBuildLog>
      <replyTo></replyTo>
      <saveOutput>false</saveOutput>
      <disabled>false</disabled>
      <matrixTriggerMode>BOTH</matrixTriggerMode>
    </hudson.plugins.emailext.ExtendedEmailPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.29">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.build__timeout.BuildTimeoutWrapper plugin="build-timeout@1.16-INTEL-1">
      <strategy class="hudson.plugins.build_timeout.impl.AbsoluteTimeOutStrategy">
        <timeoutMinutes>180</timeoutMinutes>
      </strategy>
      <operationList>
        <hudson.plugins.build__timeout.operations.AbortOperation/>
      </operationList>
    </hudson.plugins.build__timeout.BuildTimeoutWrapper>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.8.3"/>
    <matrixtieparent.BuildWrapperMtp plugin="matrixtieparent@1.2">
      <labelName>build</labelName>
    </matrixtieparent.BuildWrapperMtp>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>